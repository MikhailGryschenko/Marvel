{"version":3,"sources":["components/appHeader/AppHeader.js","components/spinner/Spinner.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/app/App.js","index.js"],"names":["AppHeader","_jsxs","className","children","_jsx","href","Spinner","xmlns","style","margin","background","display","width","height","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","ErrorMessage","objectFit","src","img","alt","MarvelService","constructor","_this","_apiBase","_apiKey","_baseOffset","getResource","async","res","fetch","url","ok","Error","concat","status","json","getAllCharacters","offset","arguments","length","undefined","data","results","map","_transformCharacter","getCharacter","this","id","char","name","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","RandomChar","Component","state","loading","error","marvelService","onCharLoaded","setState","onCharLoading","onError","updateChar","Math","floor","random","then","catch","componentDidMount","componentWillUnmount","clearInterval","timerId","render","errorMessage","spinner","content","View","onClick","mjolnir","_ref","imgStyle","CharList","charList","newItemLoading","charEnded","onRequest","onCharListLoading","onCharListLoaded","newCharList","ended","renderItems","arr","item","tabIndex","props","onCharSelected","disabled","Skeleton","_Fragment","CharInfo","charId","componentDidUpdate","prevProps","skeleton","i","ErrorBoundary","componentDidCatch","App","selectedChar","decoration","ReactDOM","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.685bcfa4.chunk.js","sourcesContent":["import './appHeader.scss';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <a href=\"#\">\n                    <span>Marvel</span> information portal\n                </a>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><a href=\"#\">Characters</a></li>\n                    /\n                    <li><a href=\"#\">Comics</a></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","const Spinner = () => {\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={{margin: '0 auto', background: 'none', display: 'block'}} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\r\n            <g transform=\"translate(80,50)\">\r\n            <g transform=\"rotate(0)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(71.21320343559643,71.21320343559643)\">\r\n            <g transform=\"rotate(45)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(50,80)\">\r\n            <g transform=\"rotate(90)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(28.786796564403577,71.21320343559643)\">\r\n            <g transform=\"rotate(135)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(20,50.00000000000001)\">\r\n            <g transform=\"rotate(180)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(28.78679656440357,28.786796564403577)\">\r\n            <g transform=\"rotate(225)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(49.99999999999999,20)\">\r\n            <g transform=\"rotate(270)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(71.21320343559643,28.78679656440357)\">\r\n            <g transform=\"rotate(315)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g>\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default Spinner;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <img style={{ display: 'block', width: \"250px\", height: \"250px\",objectFit: 'contain', margin: \"0 auto\"}} src={img} alt='Error' />\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","class MarvelService {\n    _apiBase = 'https://gateway.marvel.com:443/v1/public/';\n    _apiKey = 'apikey=3bfbcd319190170cdb6c63f7b47ee5f8';\n    _baseOffset = 210;\n\n    getResource = async (url) => {\n        let res = await fetch(url);\n    \n        if(!res.ok) {\n            throw new Error (`Could not fetch ${url}, status ${res.status}`);\n        }\n    \n        return await res.json();\n    }\n\n    getAllCharacters = async (offset = this._baseOffset) => {       // если не передаём аргумент, то будет использоваться базовый отступ = 210\n        const res =  await this.getResource(`${this._apiBase}characters?limit=9&offset=${offset}&${this._apiKey}`);\n        return res.data.results.map(this._transformCharacter);\n    }\n\n    getCharacter = async (id) => {\n        const res = await this.getResource(`${this._apiBase}characters/${id}?${this._apiKey}`);\n        return this._transformCharacter(res.data.results[0]);\n    }\n\n    _transformCharacter = (char) => {\n        return {\n            id: char.id,\n            name: char.name,\n            description: char.description ? `${char.description.slice(0, 210)}...` : 'There is no description for this character',\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\n            homepage: char.urls[0].url,\n            wiki: char.urls[1].url,\n            comics: char.comics.items\n        }\n    }\n}\n\nexport default MarvelService;","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import { Component } from 'react';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport MarvelService from '../../services/MarvelService';\n\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\n\nclass RandomChar extends Component {\n    state = {\n        char: {},\n        loading: true,\n        error: false\n    }\n\n    marvelService = new MarvelService();\n\n    componentDidMount() {\n        this.updateChar();\n        /* this.timerId = setInterval(this.updateChar, 3000); */\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.timerId);\n    }\n\n    onCharLoaded = (char) => {\n        this.setState({\n            char,                   // {char: char} что тоже самое\n            loading: false\n        })           \n    }\n\n    onCharLoading = () => {\n        this.setState({\n            loading: true\n        })\n    }\n\n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true\n        })\n    }\n\n    updateChar = () => {\n        const id = Math.floor(Math.random() * (1011400 -1011000) + 1011000);\n        this.onCharLoading();\n        this.marvelService\n            .getCharacter(id)\n            .then(this.onCharLoaded)\n            .catch(this.onError)\n    }\n\n\n    render() {\n        const {char, loading, error} = this.state;\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = !(loading || error) ? <View char={char}/> : null;\n\n        return (\n            <div className=\"randomchar\">\n                {errorMessage}\n                {spinner}\n                {content}\n                <div className=\"randomchar__static\">\n                    <p className=\"randomchar__title\">\n                        Random character for today!<br/>\n                        Do you want to get to know him better?\n                    </p>\n                    <p className=\"randomchar__title\">\n                        Or choose another one\n                    </p>\n                    <button onClick={this.updateChar} className=\"button button__main\">\n                        <div className=\"inner\">try it</div>\n                    </button>\n                    <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst View = ({char}) => {\n    const {name, description, thumbnail, homepage, wiki} = char;\n    let imgStyle = {'objectFit' : 'cover'};\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = {'objectFit' : 'contain'};\n    }\n\n    return (\n        <div className=\"randomchar__block\">\n            <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\" style={imgStyle}/>\n            <div className=\"randomchar__info\">\n                <p className=\"randomchar__name\">{name}</p>\n                <p className=\"randomchar__descr\">\n                    {description}\n                </p>\n                <div className=\"randomchar__btns\">\n                    <a href={homepage} className=\"button button__main\">\n                        <div className=\"inner\">homepage</div>\n                    </a>\n                    <a href={wiki} className=\"button button__secondary\">\n                        <div className=\"inner\">Wiki</div>\n                    </a>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default RandomChar;","import {Component} from 'react';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport MarvelService from '../../services/MarvelService';\nimport './charList.scss';\n\nclass CharList extends Component {\n\n    state = {\n        charList: [],\n        loading: true,\n        error: false,\n        newItemLoading: false,\n        offset: 210,\n        charEnded: false\n    }\n    \n    marvelService = new MarvelService();\n\n    componentDidMount() {\n        this.onRequest();\n    }\n\n    onRequest = (offset) => {\n        this.onCharListLoading();\n        this.marvelService.getAllCharacters(offset)\n            .then(this.onCharListLoaded)\n            .catch(this.onError)\n    }\n\n    onCharListLoading = () => {\n        this.setState({\n            newItemLoading: true\n        })\n    }\n\n    onCharListLoaded = (newCharList) => {\n        let ended = false;\n        if(newCharList.length < 9) {\n            ended = true;\n        }\n\n        this.setState(({offset, charList}) => ({\n            charList:[...charList, ...newCharList],\n            loading: false,\n            newItemLoading: false,\n            offset: offset + 9,\n            charEnded: ended\n        }))\n    }\n\n    onError = () => {\n        this.setState({\n            error: true,\n            loading: false\n        })\n    }\n\n    // Этот метод создан для оптимизации, \n    // чтобы не помещать такую конструкцию в метод render\n    renderItems(arr) {\n        const items =  arr.map((item) => {\n            let imgStyle = {'objectFit' : 'cover'};\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n                imgStyle = {'objectFit' : 'unset'};\n            }\n            \n            return (\n                <li \n                    className=\"char__item\"\n                    key={item.id} \n                    tabIndex={0}\n                    onClick={() => this.props.onCharSelected(item.id)}>\n                        <img src={item.thumbnail} alt={item.name} style={imgStyle}/>\n                        <div className=\"char__name\">{item.name}</div>\n                </li>\n            )\n        });\n        // А эта конструкция вынесена для центровки спиннера/ошибки\n        return (\n            <ul className=\"char__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n    render() {\n\n        const {charList, loading, error, offset, newItemLoading, charEnded} = this.state;\n        \n        const items = this.renderItems(charList);\n\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = !(loading || error) ? items : null;\n\n        return (\n            <div className=\"char__list\">\n                {errorMessage}\n                {spinner}\n                {content}\n                <button \n                    className=\"button button__main button__long\" \n                    disabled={newItemLoading} \n                    style={{'display': charEnded ? 'none' : 'block'}}\n                    onClick={() => this.onRequest(offset)}>\n                    <div className=\"inner\">load more</div>\n                </button>\n            </div>\n        )\n    }\n}\n\nexport default CharList;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Skeleton from '../skeleton/Skeleton';\nimport MarvelService from '../../services/MarvelService';\nimport './charInfo.scss';\n\nclass CharInfo extends Component {\n\n    state = {\n        char: null,\n        loading: false,\n        error: false\n    }\n\n    marvelService = new MarvelService();\n\n    componentDidMount() {\n        this.updateChar();\n    }\n\n    componentDidUpdate(prevProps) {\n        if(this.props.charId !== prevProps.charId) {\n            this.updateChar();\n        }\n    }\n\n    onCharLoaded = (char) => {\n        this.setState({\n            char,                   // {char: char} что тоже самое\n            loading: false\n        })           \n    }\n\n    onCharLoading = () => {\n        this.setState({\n            loading: true\n        })\n    }\n\n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true\n        })\n    }\n\n    updateChar = () => {\n        const {charId} = this.props;\n        if(!charId) {\n            return;\n        }\n\n        this.onCharLoading();\n\n        this.marvelService\n            .getCharacter(charId)\n            .then(this.onCharLoaded)\n            .catch(this.onError)\n    }\n\n    render(){\n        const {char, loading, error} = this.state;\n        const skeleton = char || loading || error ? null : <Skeleton/>;\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = !(loading || error || !char) ? <View char={char}/> : null;\n\n        return (\n            <div className=\"char__info\">\n                {skeleton}\n                {errorMessage}\n                {spinner}\n                {content}\n            </div>\n        )\n    }\n}\n\nconst View = ({char}) => {\n    const {name, description, thumbnail, homepage, wiki, comics} = char;\n    let imgStyle = {'objectFit' : 'cover'};\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = {'objectFit' : 'contain'};\n    }\n    return (\n        <>\n            <div className=\"char__basics\">\n                <img src={thumbnail} alt={name} style={imgStyle}/>\n                <div>\n                    <div className=\"char__info-name\">{name}</div>\n                    <div className=\"char__btns\">\n                        <a href={homepage} className=\"button button__main\">\n                            <div className=\"inner\">homepage</div>\n                        </a>\n                        <a href={wiki} className=\"button button__secondary\">\n                            <div className=\"inner\">Wiki</div>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"char__descr\">\n                {description}\n            </div>\n            <div className=\"char__comics\">Comics:</div>\n            <ul className=\"char__comics-list\">\n                {comics.length > 0 ? null : 'There is no comics with this character.'}\n                {\n                    comics.slice(0,10).map((item, i) => {       // или if(i>9) return; вместо slice(0,10)\n                        return (\n                        <li key={i} className=\"char__comics-item\">\n                            {item.name}\n                        </li>\n                        )\n                    })\n                }\n            </ul>\n        </>\n    )\n}\n\nCharInfo.propTypes = {\n    charId: PropTypes.number\n}\n\nexport default CharInfo;","import { Component } from \"react\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\"; \r\n\r\nclass ErrorBoundary extends Component {\r\n    state = {\r\n        error: false\r\n    }\r\n\r\n    componentDidCatch(error) {\r\n        this.setState({\r\n            error: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if(this.state.error) {\r\n            return <ErrorMessage/>\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { Component } from \"react\";\nimport AppHeader from \"../appHeader/AppHeader\";\nimport RandomChar from \"../randomChar/RandomChar\";\nimport CharList from \"../charList/CharList\";\nimport CharInfo from \"../charInfo/CharInfo\";\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\n\nimport decoration from '../../resources/img/vision.png';\n\nclass App extends Component{\n\n    state = {\n        selectedChar: null\n    }\n\n    onCharSelected = (id) => {\n        this.setState({\n            selectedChar: id\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"app\">\n                <AppHeader/>\n                <main>\n                    <ErrorBoundary>\n                        <RandomChar/>\n                    </ErrorBoundary>\n                    <div className=\"char__content\">\n                        <ErrorBoundary>\n                            <CharList onCharSelected={this.onCharSelected}/>\n                        </ErrorBoundary>\n                        <ErrorBoundary>\n                            <CharInfo charId={this.state.selectedChar}/>\n                        </ErrorBoundary>\n                    </div>\n                    <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\n                </main>\n            </div>\n        )\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\n\nimport './style/style.scss';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}